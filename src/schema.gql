scalar Day

interface Node {
  id: ID!
}

type Post implements Node {
  id: ID!
  day: Day!
  # stems: [Stem]!
}

type Stem implements Node {
  id: ID!
  body: String!
}

input createStemInput {
  parentID: ID
  title: String
  flowering: Boolean
  tags: [String]!
  body: String!
}

type Query {
  posts(limit: Int): [Post]
  post(id: ID!): Post
}

type Mutation {
  createStem(input: createStemInput!): Stem
}
